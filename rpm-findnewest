#!/usr/bin/python
#
# diffrpm - generate diff list for rpm files.
#
# Levin Du <zsdjw@21cn.com>
#
# Copyright 2007 Magic Linux Group
#
# This software may be freely redistributed under the terms of the GNU
# library public license.
#
# You should have received a copy of the GNU Library Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.#!/usr/bin/python
#
# rpm-findnewest - find newest rpm files.
#
# Levin Du <zsdjw@21cn.com>
#
# Copyright 2007 Magic Linux Group
#
# This software may be freely redistributed under the terms of the GNU
# library public license.
#
# You should have received a copy of the GNU Library Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#

import os
import sys

dummy_fn = "dummy"
help_msg = """Usage: rpmnewest {dir | rpmlistfile}"""

        
def rpm_find_newest(repo):
    import rpmhelper
    rpmfn_list = rpmhelper.read_from_location(repo)
    rpmfn_map = rpmhelper.sort_rpmlist(rpmfn_list)
    for li in rpmfn_map.values():
        print li[0].fullname

def fix_import_path(prog):
    cwd = os.getcwd()
    prog_path = os.path.dirname(prog)
    os.chdir(prog_path)
    prog_path = os.getcwd()
    if prog_path.startswith('/usr'): # installed
        pass
    else:
        sys.path.append(prog_path)
    os.chdir(cwd)
    
def main():
    fix_import_path(sys.argv[0])
    if len(sys.argv) != 2:
        print help_msg
        sys.exit(-1)
    try:
        rpm_find_newest(sys.argv[1])
    except Exception, e:
        print >>sys.stderr, e
        sys.exit(-1)
    sys.exit(0)
    
if __name__ == "__main__":
    main()
